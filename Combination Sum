class Solution {
public:
    void recursive(int index,  vector<int>& candidates  ,int target,  vector<vector<int>>&ans,  vector<int>&ds){
        if (index == candidates.size()){
        if(target==0){
            ans.push_back(ds);
        }
        return;
        } 
        if (target>=candidates[index]){
            ds.push_back(candidates[index]);
            recursive(index,candidates,target-candidates[index],ans,ds);
            ds.pop_back();

        }
        recursive(index+1,candidates,target,ans,ds);
}
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>ans;
        vector<int> ds;
        recursive(0,candidates,target,ans,ds);
        return ans;
    }
};
